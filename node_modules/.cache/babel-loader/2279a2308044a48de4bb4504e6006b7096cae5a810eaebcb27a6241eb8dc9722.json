{"ast":null,"code":"/*! @azure/msal-browser v4.13.1 2025-06-10 */\n'use strict';\n\nimport { AuthError } from '@azure/msal-common/browser';\nimport { storageNotSupported, stubbedPublicClientApplicationCalled, inMemRedirectUnavailable } from './BrowserConfigurationAuthErrorCodes.mjs';\nimport * as BrowserConfigurationAuthErrorCodes from './BrowserConfigurationAuthErrorCodes.mjs';\nexport { BrowserConfigurationAuthErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nconst BrowserConfigurationAuthErrorMessages = {\n  [storageNotSupported]: \"Given storage configuration option was not supported.\",\n  [stubbedPublicClientApplicationCalled]: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n  [inMemRedirectUnavailable]: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\n};\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use BrowserAuthErrorCodes instead\r\n */\nconst BrowserConfigurationAuthErrorMessage = {\n  storageNotSupportedError: {\n    code: storageNotSupported,\n    desc: BrowserConfigurationAuthErrorMessages[storageNotSupported]\n  },\n  stubPcaInstanceCalled: {\n    code: stubbedPublicClientApplicationCalled,\n    desc: BrowserConfigurationAuthErrorMessages[stubbedPublicClientApplicationCalled]\n  },\n  inMemRedirectUnavailable: {\n    code: inMemRedirectUnavailable,\n    desc: BrowserConfigurationAuthErrorMessages[inMemRedirectUnavailable]\n  }\n};\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\nclass BrowserConfigurationAuthError extends AuthError {\n  constructor(errorCode, errorMessage) {\n    super(errorCode, errorMessage);\n    this.name = \"BrowserConfigurationAuthError\";\n    Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n  }\n}\nfunction createBrowserConfigurationAuthError(errorCode) {\n  return new BrowserConfigurationAuthError(errorCode, BrowserConfigurationAuthErrorMessages[errorCode]);\n}\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, BrowserConfigurationAuthErrorMessages, createBrowserConfigurationAuthError };","map":{"version":3,"names":["BrowserConfigurationAuthErrorMessages","storageNotSupported","stubbedPublicClientApplicationCalled","inMemRedirectUnavailable","BrowserConfigurationAuthErrorMessage","storageNotSupportedError","code","desc","stubPcaInstanceCalled","BrowserConfigurationAuthError","AuthError","constructor","errorCode","errorMessage","name","Object","setPrototypeOf","prototype","createBrowserConfigurationAuthError"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common/browser\";\nimport * as BrowserConfigurationAuthErrorCodes from \"./BrowserConfigurationAuthErrorCodes.js\";\nexport { BrowserConfigurationAuthErrorCodes };\n\nexport const BrowserConfigurationAuthErrorMessages = {\n    [BrowserConfigurationAuthErrorCodes.storageNotSupported]:\n        \"Given storage configuration option was not supported.\",\n    [BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled]:\n        \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    [BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable]:\n        \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    storageNotSupportedError: {\n        code: BrowserConfigurationAuthErrorCodes.storageNotSupported,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.storageNotSupported\n        ],\n    },\n    stubPcaInstanceCalled: {\n        code: BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes\n                .stubbedPublicClientApplicationCalled\n        ],\n    },\n    inMemRedirectUnavailable: {\n        code: BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n}\n\nexport function createBrowserConfigurationAuthError(\n    errorCode: string\n): BrowserConfigurationAuthError {\n    return new BrowserConfigurationAuthError(\n        errorCode,\n        BrowserConfigurationAuthErrorMessages[errorCode]\n    );\n}\n"],"mappings":";;;;;;;;AAAA;;;AAGG;AAMU,MAAAA,qCAAqC,GAAG;EACjD,CAACC,mBAAsD,GACnD,uDAAuD;EAC3D,CAACC,oCAAuE,GACpE,gLAAgL;EACpL,CAACC,wBAA2D,GACxD;;AAGR;;;AAGG;AACU,MAAAC,oCAAoC,GAAG;EAChDC,wBAAwB,EAAE;IACtBC,IAAI,EAAEL,mBAAsD;IAC5DM,IAAI,EAAEP,qCAAqC,CACvCC,mBAAsD;EAE7D;EACDO,qBAAqB,EAAE;IACnBF,IAAI,EAAEJ,oCAAuE;IAC7EK,IAAI,EAAEP,qCAAqC,CACvCE,oCACyC;EAEhD;EACDC,wBAAwB,EAAE;IACtBG,IAAI,EAAEH,wBAA2D;IACjEI,IAAI,EAAEP,qCAAqC,CACvCG,wBAA2D;EAElE;;AAGL;;AAEG;AACG,MAAOM,6BAA8B,SAAQC,SAAS;EACxDC,WAAYA,CAAAC,SAAiB,EAAEC,YAAqB;IAChD,KAAK,CAACD,SAAS,EAAEC,YAAY,CAAC;IAC9B,IAAI,CAACC,IAAI,GAAG,+BAA+B;IAE3CC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEP,6BAA6B,CAACQ,SAAS,CAAC;;AAE3E;AAEK,SAAUC,mCAAmCA,CAC/CN,SAAiB;EAEjB,OAAO,IAAIH,6BAA6B,CACpCG,SAAS,EACTZ,qCAAqC,CAACY,SAAS,CAAC,CACnD;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}