{"ast":null,"code":"/*! @azure/msal-common v15.7.0 2025-05-30 */\n'use strict';\n\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nconst StubbedNetworkModule = {\n  sendGetRequestAsync: () => {\n    return Promise.reject(createClientAuthError(methodNotImplemented));\n  },\n  sendPostRequestAsync: () => {\n    return Promise.reject(createClientAuthError(methodNotImplemented));\n  }\n};\nexport { StubbedNetworkModule };","map":{"version":3,"names":["StubbedNetworkModule","sendGetRequestAsync","Promise","reject","createClientAuthError","methodNotImplemented","sendPostRequestAsync"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-common/src/network/INetworkModule.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError.js\";\nimport { NetworkResponse } from \"./NetworkResponse.js\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>;\n    body?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions,\n        timeout?: number\n    ): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n    sendPostRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n};\n"],"mappings":";;;;;;AAAA;;;AAGG;AA6CU,MAAAA,oBAAoB,GAAmB;EAChDC,mBAAmB,EAAEA,CAAA,KAAK;IACtB,OAAOC,OAAO,CAACC,MAAM,CACjBC,qBAAqB,CAACC,oBAAyC,CAAC,CACnE;GACJ;EACDC,oBAAoB,EAAEA,CAAA,KAAK;IACvB,OAAOJ,OAAO,CAACC,MAAM,CACjBC,qBAAqB,CAACC,oBAAyC,CAAC,CACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}