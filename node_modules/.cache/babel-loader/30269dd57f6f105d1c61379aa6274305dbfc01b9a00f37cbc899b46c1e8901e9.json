{"ast":null,"code":"/*! @azure/msal-browser v4.13.1 2025-06-10 */\n'use strict';\n\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\nimport { stubbedPublicClientApplicationCalled } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nconst stubbedPublicClientApplication = {\n  initialize: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenPopup: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenRedirect: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenSilent: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  acquireTokenByCode: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  getAllAccounts: () => {\n    return [];\n  },\n  getAccount: () => {\n    return null;\n  },\n  getAccountByHomeId: () => {\n    return null;\n  },\n  getAccountByUsername: () => {\n    return null;\n  },\n  getAccountByLocalId: () => {\n    return null;\n  },\n  handleRedirectPromise: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  loginPopup: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  loginRedirect: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  logout: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  logoutRedirect: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  logoutPopup: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  ssoSilent: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  addEventCallback: () => {\n    return null;\n  },\n  removeEventCallback: () => {\n    return;\n  },\n  addPerformanceCallback: () => {\n    return \"\";\n  },\n  removePerformanceCallback: () => {\n    return false;\n  },\n  enableAccountStorageEvents: () => {\n    return;\n  },\n  disableAccountStorageEvents: () => {\n    return;\n  },\n  getTokenCache: () => {\n    throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n  },\n  getLogger: () => {\n    throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n  },\n  setLogger: () => {\n    return;\n  },\n  setActiveAccount: () => {\n    return;\n  },\n  getActiveAccount: () => {\n    return null;\n  },\n  initializeWrapperLibrary: () => {\n    return;\n  },\n  setNavigationClient: () => {\n    return;\n  },\n  getConfiguration: () => {\n    throw createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled);\n  },\n  hydrateCache: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  },\n  clearCache: () => {\n    return Promise.reject(createBrowserConfigurationAuthError(stubbedPublicClientApplicationCalled));\n  }\n};\nexport { stubbedPublicClientApplication };","map":{"version":3,"names":["stubbedPublicClientApplication","initialize","Promise","reject","createBrowserConfigurationAuthError","stubbedPublicClientApplicationCalled","acquireTokenPopup","acquireTokenRedirect","acquireTokenSilent","acquireTokenByCode","getAllAccounts","getAccount","getAccountByHomeId","getAccountByUsername","getAccountByLocalId","handleRedirectPromise","loginPopup","loginRedirect","logout","logoutRedirect","logoutPopup","ssoSilent","addEventCallback","removeEventCallback","addPerformanceCallback","removePerformanceCallback","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","getLogger","setLogger","setActiveAccount","getActiveAccount","initializeWrapperLibrary","setNavigationClient","getConfiguration","hydrateCache","clearCache"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-browser/src/app/IPublicClientApplication.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountFilter,\n    AccountInfo,\n    Logger,\n    PerformanceCallbackFunction,\n} from \"@azure/msal-common/browser\";\nimport { RedirectRequest } from \"../request/RedirectRequest.js\";\nimport { PopupRequest } from \"../request/PopupRequest.js\";\nimport { SilentRequest } from \"../request/SilentRequest.js\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest.js\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest.js\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError.js\";\nimport { WrapperSKU } from \"../utils/BrowserConstants.js\";\nimport { INavigationClient } from \"../navigation/INavigationClient.js\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest.js\";\nimport { ITokenCache } from \"../cache/ITokenCache.js\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest.js\";\nimport { BrowserConfiguration } from \"../config/Configuration.js\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult.js\";\nimport { EventCallbackFunction } from \"../event/EventMessage.js\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest.js\";\nimport { InitializeApplicationRequest } from \"../request/InitializeApplicationRequest.js\";\nimport { EventType } from \"../event/EventType.js\";\n\nexport interface IPublicClientApplication {\n    // TODO: Make request mandatory in the next major version?\n    initialize(request?: InitializeApplicationRequest): Promise<void>;\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\n    acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult>;\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult>;\n    addEventCallback(\n        callback: EventCallbackFunction,\n        eventTypes?: Array<EventType>\n    ): string | null;\n    removeEventCallback(callbackId: string): void;\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string;\n    removePerformanceCallback(callbackId: string): boolean;\n    enableAccountStorageEvents(): void;\n    disableAccountStorageEvents(): void;\n    getAccount(accountFilter: AccountFilter): AccountInfo | null;\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\n    getAccountByLocalId(localId: string): AccountInfo | null;\n    getAccountByUsername(userName: string): AccountInfo | null;\n    getAllAccounts(): AccountInfo[];\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\n    loginRedirect(request?: RedirectRequest): Promise<void>;\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\n    getTokenCache(): ITokenCache;\n    getLogger(): Logger;\n    setLogger(logger: Logger): void;\n    setActiveAccount(account: AccountInfo | null): void;\n    getActiveAccount(): AccountInfo | null;\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\n    setNavigationClient(navigationClient: INavigationClient): void;\n    /** @internal */\n    getConfiguration(): BrowserConfiguration;\n    hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void>;\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void>;\n}\n\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\n    initialize: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenSilent: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    acquireTokenByCode: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    getAllAccounts: () => {\n        return [];\n    },\n    getAccount: () => {\n        return null;\n    },\n    getAccountByHomeId: () => {\n        return null;\n    },\n    getAccountByUsername: () => {\n        return null;\n    },\n    getAccountByLocalId: () => {\n        return null;\n    },\n    handleRedirectPromise: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    loginPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    loginRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logout: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logoutRedirect: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    logoutPopup: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    ssoSilent: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    addEventCallback: () => {\n        return null;\n    },\n    removeEventCallback: () => {\n        return;\n    },\n    addPerformanceCallback: () => {\n        return \"\";\n    },\n    removePerformanceCallback: () => {\n        return false;\n    },\n    enableAccountStorageEvents: () => {\n        return;\n    },\n    disableAccountStorageEvents: () => {\n        return;\n    },\n    getTokenCache: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    getLogger: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    setLogger: () => {\n        return;\n    },\n    setActiveAccount: () => {\n        return;\n    },\n    getActiveAccount: () => {\n        return null;\n    },\n    initializeWrapperLibrary: () => {\n        return;\n    },\n    setNavigationClient: () => {\n        return;\n    },\n    getConfiguration: () => {\n        throw createBrowserConfigurationAuthError(\n            BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n        );\n    },\n    hydrateCache: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n    clearCache: () => {\n        return Promise.reject(\n            createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled\n            )\n        );\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}