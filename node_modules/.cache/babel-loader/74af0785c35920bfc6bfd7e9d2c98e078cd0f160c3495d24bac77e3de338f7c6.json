{"ast":null,"code":"/*! @azure/msal-browser v4.13.1 2025-06-10 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\n/**\r\n * Returns URL Safe b64 encoded string from a plaintext string.\r\n * @param input\r\n */\nfunction urlEncode(input) {\n  return encodeURIComponent(base64Encode(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\"));\n}\n/**\r\n * Returns URL Safe b64 encoded string from an int8Array.\r\n * @param inputArr\r\n */\nfunction urlEncodeArr(inputArr) {\n  return base64EncArr(inputArr).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\n/**\r\n * Returns b64 encoded string from plaintext string.\r\n * @param input\r\n */\nfunction base64Encode(input) {\n  return base64EncArr(new TextEncoder().encode(input));\n}\n/**\r\n * Base64 encode byte array\r\n * @param aBytes\r\n */\nfunction base64EncArr(aBytes) {\n  const binString = Array.from(aBytes, x => String.fromCodePoint(x)).join(\"\");\n  return btoa(binString);\n}\nexport { base64Encode, urlEncode, urlEncodeArr };","map":{"version":3,"names":["urlEncode","input","encodeURIComponent","base64Encode","replace","urlEncodeArr","inputArr","base64EncArr","TextEncoder","encode","aBytes","binString","Array","from","x","String","fromCodePoint","join","btoa"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-browser/src/encode/Base64Encode.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\n\n/**\n * Returns URL Safe b64 encoded string from a plaintext string.\n * @param input\n */\nexport function urlEncode(input: string): string {\n    return encodeURIComponent(\n        base64Encode(input)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n    );\n}\n\n/**\n * Returns URL Safe b64 encoded string from an int8Array.\n * @param inputArr\n */\nexport function urlEncodeArr(inputArr: Uint8Array): string {\n    return base64EncArr(inputArr)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\n\n/**\n * Returns b64 encoded string from plaintext string.\n * @param input\n */\nexport function base64Encode(input: string): string {\n    return base64EncArr(new TextEncoder().encode(input));\n}\n\n/**\n * Base64 encode byte array\n * @param aBytes\n */\nfunction base64EncArr(aBytes: Uint8Array): string {\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\n        \"\"\n    );\n    return btoa(binString);\n}\n"],"mappings":";;;AAAA;;;AAGG;AAEH;;;AAGG;AAEH;;;AAGG;AACG,SAAUA,SAASA,CAACC,KAAa;EACnC,OAAOC,kBAAkB,CACrBC,YAAY,CAACF,KAAK,CAAC,CACdG,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CACjBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAC3B;AACL;AAEA;;;AAGG;AACG,SAAUC,YAAYA,CAACC,QAAoB;EAC7C,OAAOC,YAAY,CAACD,QAAQ,CAAC,CACxBF,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CACjBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;AAC5B;AAEA;;;AAGG;AACG,SAAUD,YAAYA,CAACF,KAAa;EACtC,OAAOM,YAAY,CAAC,IAAIC,WAAW,EAAE,CAACC,MAAM,CAACR,KAAK,CAAC,CAAC;AACxD;AAEA;;;AAGG;AACH,SAASM,YAAYA,CAACG,MAAkB;EACpC,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACH,MAAM,EAAGI,CAAC,IAAKC,MAAM,CAACC,aAAa,CAACF,CAAC,CAAC,CAAC,CAACG,IAAI,CACrE,EAAE,CACL;EACD,OAAOC,IAAI,CAACP,SAAS,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}