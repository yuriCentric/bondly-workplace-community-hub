{"ast":null,"code":"/*! @azure/msal-react v3.0.12 2025-05-06 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nfunction getChildrenOrFunction(children, args) {\n  if (typeof children === \"function\") {\n    return children(args);\n  }\n  return children;\n}\n/**\r\n * Helper function to determine whether 2 arrays are equal\r\n * Used to avoid unnecessary state updates\r\n * @param arrayA\r\n * @param arrayB\r\n */\nfunction accountArraysAreEqual(arrayA, arrayB) {\n  if (arrayA.length !== arrayB.length) {\n    return false;\n  }\n  const comparisonArray = [...arrayB];\n  return arrayA.every(elementA => {\n    const elementB = comparisonArray.shift();\n    if (!elementA || !elementB) {\n      return false;\n    }\n    return elementA.homeAccountId === elementB.homeAccountId && elementA.localAccountId === elementB.localAccountId && elementA.username === elementB.username;\n  });\n}\nfunction getAccountByIdentifiers(allAccounts, accountIdentifiers) {\n  if (allAccounts.length > 0 && (accountIdentifiers.homeAccountId || accountIdentifiers.localAccountId || accountIdentifiers.username)) {\n    const matchedAccounts = allAccounts.filter(accountObj => {\n      if (accountIdentifiers.username && accountIdentifiers.username.toLowerCase() !== accountObj.username.toLowerCase()) {\n        return false;\n      }\n      if (accountIdentifiers.homeAccountId && accountIdentifiers.homeAccountId.toLowerCase() !== accountObj.homeAccountId.toLowerCase()) {\n        return false;\n      }\n      if (accountIdentifiers.localAccountId && accountIdentifiers.localAccountId.toLowerCase() !== accountObj.localAccountId.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n    return matchedAccounts[0] || null;\n  } else {\n    return null;\n  }\n}\nexport { accountArraysAreEqual, getAccountByIdentifiers, getChildrenOrFunction };","map":{"version":3,"names":["getChildrenOrFunction","children","args","accountArraysAreEqual","arrayA","arrayB","length","comparisonArray","every","elementA","elementB","shift","homeAccountId","localAccountId","username","getAccountByIdentifiers","allAccounts","accountIdentifiers","matchedAccounts","filter","accountObj","toLowerCase"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-react/src/utils/utilities.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AccountIdentifiers } from \"../types/AccountIdentifiers.js\";\nimport { AccountInfo } from \"@azure/msal-browser\";\n\ntype FaaCFunction = <T>(args: T) => React.ReactNode;\n\nexport function getChildrenOrFunction<T>(\n    children: React.ReactNode | FaaCFunction,\n    args: T\n): React.ReactNode {\n    if (typeof children === \"function\") {\n        return children(args);\n    }\n    return children;\n}\n\n/*\n * Utility types\n * Reference: https://github.com/piotrwitek/utility-types\n */\nexport type SetDifference<A, B> = A extends B ? never : A;\nexport type SetComplement<A, A1 extends A> = SetDifference<A, A1>;\nexport type Subtract<T extends T1, T1 extends object> = Pick<\n    T,\n    SetComplement<keyof T, keyof T1>\n>;\n\n/**\n * Helper function to determine whether 2 arrays are equal\n * Used to avoid unnecessary state updates\n * @param arrayA\n * @param arrayB\n */\nexport function accountArraysAreEqual(\n    arrayA: Array<AccountIdentifiers>,\n    arrayB: Array<AccountIdentifiers>\n): boolean {\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    const comparisonArray = [...arrayB];\n\n    return arrayA.every((elementA) => {\n        const elementB = comparisonArray.shift();\n        if (!elementA || !elementB) {\n            return false;\n        }\n\n        return (\n            elementA.homeAccountId === elementB.homeAccountId &&\n            elementA.localAccountId === elementB.localAccountId &&\n            elementA.username === elementB.username\n        );\n    });\n}\n\nexport function getAccountByIdentifiers(\n    allAccounts: AccountInfo[],\n    accountIdentifiers: AccountIdentifiers\n): AccountInfo | null {\n    if (\n        allAccounts.length > 0 &&\n        (accountIdentifiers.homeAccountId ||\n            accountIdentifiers.localAccountId ||\n            accountIdentifiers.username)\n    ) {\n        const matchedAccounts = allAccounts.filter((accountObj) => {\n            if (\n                accountIdentifiers.username &&\n                accountIdentifiers.username.toLowerCase() !==\n                    accountObj.username.toLowerCase()\n            ) {\n                return false;\n            }\n            if (\n                accountIdentifiers.homeAccountId &&\n                accountIdentifiers.homeAccountId.toLowerCase() !==\n                    accountObj.homeAccountId.toLowerCase()\n            ) {\n                return false;\n            }\n            if (\n                accountIdentifiers.localAccountId &&\n                accountIdentifiers.localAccountId.toLowerCase() !==\n                    accountObj.localAccountId.toLowerCase()\n            ) {\n                return false;\n            }\n\n            return true;\n        });\n\n        return matchedAccounts[0] || null;\n    } else {\n        return null;\n    }\n}\n"],"mappings":";;;AAAA;;;AAGG;AAOa,SAAAA,qBAAqBA,CACjCC,QAAwC,EACxCC,IAAO;EAEP,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;IAChC,OAAOA,QAAQ,CAACC,IAAI,CAAC;EACxB;EACD,OAAOD,QAAQ;AACnB;AAaA;;;;;AAKG;AACa,SAAAE,qBAAqBA,CACjCC,MAAiC,EACjCC,MAAiC;EAEjC,IAAID,MAAM,CAACE,MAAM,KAAKD,MAAM,CAACC,MAAM,EAAE;IACjC,OAAO,KAAK;EACf;EAED,MAAMC,eAAe,GAAG,CAAC,GAAGF,MAAM,CAAC;EAEnC,OAAOD,MAAM,CAACI,KAAK,CAAEC,QAAQ,IAAI;IAC7B,MAAMC,QAAQ,GAAGH,eAAe,CAACI,KAAK,EAAE;IACxC,IAAI,CAACF,QAAQ,IAAI,CAACC,QAAQ,EAAE;MACxB,OAAO,KAAK;IACf;IAED,OACID,QAAQ,CAACG,aAAa,KAAKF,QAAQ,CAACE,aAAa,IACjDH,QAAQ,CAACI,cAAc,KAAKH,QAAQ,CAACG,cAAc,IACnDJ,QAAQ,CAACK,QAAQ,KAAKJ,QAAQ,CAACI,QAAQ;EAE/C,CAAC,CAAC;AACN;AAEgB,SAAAC,uBAAuBA,CACnCC,WAA0B,EAC1BC,kBAAsC;EAEtC,IACID,WAAW,CAACV,MAAM,GAAG,CAAC,KACrBW,kBAAkB,CAACL,aAAa,IAC7BK,kBAAkB,CAACJ,cAAc,IACjCI,kBAAkB,CAACH,QAAQ,CAAC,EAClC;IACE,MAAMI,eAAe,GAAGF,WAAW,CAACG,MAAM,CAAEC,UAAU,IAAI;MACtD,IACIH,kBAAkB,CAACH,QAAQ,IAC3BG,kBAAkB,CAACH,QAAQ,CAACO,WAAW,EAAE,KACrCD,UAAU,CAACN,QAAQ,CAACO,WAAW,EAAE,EACvC;QACE,OAAO,KAAK;MACf;MACD,IACIJ,kBAAkB,CAACL,aAAa,IAChCK,kBAAkB,CAACL,aAAa,CAACS,WAAW,EAAE,KAC1CD,UAAU,CAACR,aAAa,CAACS,WAAW,EAAE,EAC5C;QACE,OAAO,KAAK;MACf;MACD,IACIJ,kBAAkB,CAACJ,cAAc,IACjCI,kBAAkB,CAACJ,cAAc,CAACQ,WAAW,EAAE,KAC3CD,UAAU,CAACP,cAAc,CAACQ,WAAW,EAAE,EAC7C;QACE,OAAO,KAAK;MACf;MAED,OAAO,IAAI;IACf,CAAC,CAAC;IAEF,OAAOH,eAAe,CAAC,CAAC,CAAC,IAAI,IAAI;EACpC,OAAM;IACH,OAAO,IAAI;EACd;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}