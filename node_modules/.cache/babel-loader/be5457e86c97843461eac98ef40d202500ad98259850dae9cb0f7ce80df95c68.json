{"ast":null,"code":"/*! @azure/msal-browser v4.13.1 2025-06-10 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nclass NavigationClient {\n  /**\r\n   * Navigates to other pages within the same web application\r\n   * @param url\r\n   * @param options\r\n   */\n  navigateInternal(url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  }\n  /**\r\n   * Navigates to other pages outside the web application i.e. the Identity Provider\r\n   * @param url\r\n   * @param options\r\n   */\n  navigateExternal(url, options) {\n    return NavigationClient.defaultNavigateWindow(url, options);\n  }\n  /**\r\n   * Default navigation implementation invoked by the internal and external functions\r\n   * @param url\r\n   * @param options\r\n   */\n  static defaultNavigateWindow(url, options) {\n    if (options.noHistory) {\n      window.location.replace(url); // CodeQL [SM03712] Application owner controls the URL. User can't change it.\n    } else {\n      window.location.assign(url); // CodeQL [SM03712] Application owner controls the URL. User can't change it.\n    }\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(true);\n      }, options.timeout);\n    });\n  }\n}\nexport { NavigationClient };","map":{"version":3,"names":["NavigationClient","navigateInternal","url","options","defaultNavigateWindow","navigateExternal","noHistory","window","location","replace","assign","Promise","resolve","setTimeout","timeout"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient.js\";\nimport { NavigationOptions } from \"./NavigationOptions.js\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    private static defaultNavigateWindow(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url); // CodeQL [SM03712] Application owner controls the URL. User can't change it.\n        } else {\n            window.location.assign(url); // CodeQL [SM03712] Application owner controls the URL. User can't change it.\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n"],"mappings":";;;AAAA;;;AAGG;MAKUA,gBAAgB;EACzB;;;;AAIG;EACHC,gBAAgBA,CACZC,GAAW,EACXC,OAA0B;IAE1B,OAAOH,gBAAgB,CAACI,qBAAqB,CAACF,GAAG,EAAEC,OAAO,CAAC;;EAG/D;;;;AAIG;EACHE,gBAAgBA,CACZH,GAAW,EACXC,OAA0B;IAE1B,OAAOH,gBAAgB,CAACI,qBAAqB,CAACF,GAAG,EAAEC,OAAO,CAAC;;EAG/D;;;;AAIG;EACK,OAAOC,qBAAqBA,CAChCF,GAAW,EACXC,OAA0B;IAE1B,IAAIA,OAAO,CAACG,SAAS,EAAE;MACnBC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACP,GAAG,CAAC,CAAC;IAChC,OAAM;MACHK,MAAM,CAACC,QAAQ,CAACE,MAAM,CAACR,GAAG,CAAC,CAAC;IAC/B;IAED,OAAO,IAAIS,OAAO,CAAEC,OAAO,IAAI;MAC3BC,UAAU,CAAC,MAAK;QACZD,OAAO,CAAC,IAAI,CAAC;MACjB,CAAC,EAAET,OAAO,CAACW,OAAO,CAAC;IACvB,CAAC,CAAC;;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}