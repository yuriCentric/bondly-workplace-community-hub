{"ast":null,"code":"/*! @azure/msal-common v15.7.0 2025-05-30 */\n'use strict';\n\nimport { AuthError } from './AuthError.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * Represents network related errors\r\n */\nclass NetworkError extends AuthError {\n  constructor(error, httpStatus, responseHeaders) {\n    super(error.errorCode, error.errorMessage, error.subError);\n    Object.setPrototypeOf(this, NetworkError.prototype);\n    this.name = \"NetworkError\";\n    this.error = error;\n    this.httpStatus = httpStatus;\n    this.responseHeaders = responseHeaders;\n  }\n}\n/**\r\n * Creates NetworkError object for a failed network request\r\n * @param error - Error to be thrown back to the caller\r\n * @param httpStatus - Status code of the network request\r\n * @param responseHeaders - Response headers of the network request, when available\r\n * @returns NetworkError object\r\n */\nfunction createNetworkError(error, httpStatus, responseHeaders, additionalError) {\n  error.errorMessage = `${error.errorMessage}, additionalErrorInfo: error.name:${additionalError?.name}, error.message:${additionalError?.message}`;\n  return new NetworkError(error, httpStatus, responseHeaders);\n}\nexport { NetworkError, createNetworkError };","map":{"version":3,"names":["NetworkError","AuthError","constructor","error","httpStatus","responseHeaders","errorCode","errorMessage","subError","Object","setPrototypeOf","prototype","name","createNetworkError","additionalError","message"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-common/src/error/NetworkError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError.js\";\n\n/**\n * Represents network related errors\n */\nexport class NetworkError extends AuthError {\n    error: AuthError;\n    httpStatus?: number;\n    responseHeaders?: Record<string, string>;\n\n    constructor(\n        error: AuthError,\n        httpStatus?: number,\n        responseHeaders?: Record<string, string>\n    ) {\n        super(error.errorCode, error.errorMessage, error.subError);\n\n        Object.setPrototypeOf(this, NetworkError.prototype);\n        this.name = \"NetworkError\";\n        this.error = error;\n        this.httpStatus = httpStatus;\n        this.responseHeaders = responseHeaders;\n    }\n}\n\n/**\n * Creates NetworkError object for a failed network request\n * @param error - Error to be thrown back to the caller\n * @param httpStatus - Status code of the network request\n * @param responseHeaders - Response headers of the network request, when available\n * @returns NetworkError object\n */\nexport function createNetworkError(\n    error: AuthError,\n    httpStatus?: number,\n    responseHeaders?: Record<string, string>,\n    additionalError?: Error\n): NetworkError {\n    error.errorMessage = `${error.errorMessage}, additionalErrorInfo: error.name:${additionalError?.name}, error.message:${additionalError?.message}`;\n    return new NetworkError(error, httpStatus, responseHeaders);\n}\n"],"mappings":";;;;;AAAA;;;AAGG;AAIH;;AAEG;AACG,MAAOA,YAAa,SAAQC,SAAS;EAKvCC,YACIC,KAAgB,EAChBC,UAAmB,EACnBC,eAAwC;IAExC,KAAK,CAACF,KAAK,CAACG,SAAS,EAAEH,KAAK,CAACI,YAAY,EAAEJ,KAAK,CAACK,QAAQ,CAAC;IAE1DC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEV,YAAY,CAACW,SAAS,CAAC;IACnD,IAAI,CAACC,IAAI,GAAG,cAAc;IAC1B,IAAI,CAACT,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,eAAe,GAAGA,eAAe;;AAE7C;AAED;;;;;;AAMG;AACG,SAAUQ,kBAAkBA,CAC9BV,KAAgB,EAChBC,UAAmB,EACnBC,eAAwC,EACxCS,eAAuB;EAEvBX,KAAK,CAACI,YAAY,GAAG,GAAGJ,KAAK,CAACI,YAAY,qCAAqCO,eAAe,EAAEF,IAAI,mBAAmBE,eAAe,EAAEC,OAAO,EAAE;EACjJ,OAAO,IAAIf,YAAY,CAACG,KAAK,EAAEC,UAAU,EAAEC,eAAe,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}