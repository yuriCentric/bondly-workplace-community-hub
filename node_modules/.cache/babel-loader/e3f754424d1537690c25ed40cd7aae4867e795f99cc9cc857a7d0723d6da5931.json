{"ast":null,"code":"/*! @azure/msal-browser v4.13.1 2025-06-10 */\n'use strict';\n\nimport { UrlUtils } from '@azure/msal-common/browser';\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\nimport { extractBrowserRequestState } from '../utils/BrowserProtocolUtils.mjs';\nimport { hashEmptyError, hashDoesNotContainKnownProperties, noStateInHash, unableToParseState, stateInteractionTypeMismatch } from '../error/BrowserAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nfunction deserializeResponse(responseString, responseLocation, logger) {\n  // Deserialize hash fragment response parameters.\n  const serverParams = UrlUtils.getDeserializedResponse(responseString);\n  if (!serverParams) {\n    if (!UrlUtils.stripLeadingHashOrQuery(responseString)) {\n      // Hash or Query string is empty\n      logger.error(`The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`);\n      throw createBrowserAuthError(hashEmptyError);\n    } else {\n      logger.error(`A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`);\n      logger.errorPii(`The ${responseLocation} detected is: ${responseString}`);\n      throw createBrowserAuthError(hashDoesNotContainKnownProperties);\n    }\n  }\n  return serverParams;\n}\n/**\r\n * Returns the interaction type that the response object belongs to\r\n */\nfunction validateInteractionType(response, browserCrypto, interactionType) {\n  if (!response.state) {\n    throw createBrowserAuthError(noStateInHash);\n  }\n  const platformStateObj = extractBrowserRequestState(browserCrypto, response.state);\n  if (!platformStateObj) {\n    throw createBrowserAuthError(unableToParseState);\n  }\n  if (platformStateObj.interactionType !== interactionType) {\n    throw createBrowserAuthError(stateInteractionTypeMismatch);\n  }\n}\nexport { deserializeResponse, validateInteractionType };","map":{"version":3,"names":["deserializeResponse","responseString","responseLocation","logger","serverParams","UrlUtils","getDeserializedResponse","stripLeadingHashOrQuery","error","createBrowserAuthError","hashEmptyError","errorPii","hashDoesNotContainKnownProperties","validateInteractionType","response","browserCrypto","interactionType","state","noStateInHash","platformStateObj","extractBrowserRequestState","unableToParseState","stateInteractionTypeMismatch"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-browser/src/response/ResponseHandler.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    AuthorizeResponse,\n    UrlUtils,\n} from \"@azure/msal-common/browser\";\nimport {\n    BrowserAuthErrorCodes,\n    createBrowserAuthError,\n} from \"../error/BrowserAuthError.js\";\nimport { extractBrowserRequestState } from \"../utils/BrowserProtocolUtils.js\";\nimport { InteractionType } from \"../utils/BrowserConstants.js\";\n\nexport function deserializeResponse(\n    responseString: string,\n    responseLocation: string,\n    logger: Logger\n): AuthorizeResponse {\n    // Deserialize hash fragment response parameters.\n    const serverParams = UrlUtils.getDeserializedResponse(responseString);\n    if (!serverParams) {\n        if (!UrlUtils.stripLeadingHashOrQuery(responseString)) {\n            // Hash or Query string is empty\n            logger.error(\n                `The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`\n            );\n            throw createBrowserAuthError(BrowserAuthErrorCodes.hashEmptyError);\n        } else {\n            logger.error(\n                `A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`\n            );\n            logger.errorPii(\n                `The ${responseLocation} detected is: ${responseString}`\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n            );\n        }\n    }\n    return serverParams;\n}\n\n/**\n * Returns the interaction type that the response object belongs to\n */\nexport function validateInteractionType(\n    response: AuthorizeResponse,\n    browserCrypto: ICrypto,\n    interactionType: InteractionType\n): void {\n    if (!response.state) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\n    }\n\n    const platformStateObj = extractBrowserRequestState(\n        browserCrypto,\n        response.state\n    );\n    if (!platformStateObj) {\n        throw createBrowserAuthError(BrowserAuthErrorCodes.unableToParseState);\n    }\n\n    if (platformStateObj.interactionType !== interactionType) {\n        throw createBrowserAuthError(\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\n        );\n    }\n}\n"],"mappings":";;;;;;;;AAAA;;;AAGG;SAeaA,mBAAmBA,CAC/BC,cAAsB,EACtBC,gBAAwB,EACxBC,MAAc;;EAGd,MAAMC,YAAY,GAAGC,QAAQ,CAACC,uBAAuB,CAACL,cAAc,CAAC;EACrE,IAAI,CAACG,YAAY,EAAE;IACf,IAAI,CAACC,QAAQ,CAACE,uBAAuB,CAACN,cAAc,CAAC,EAAE;;MAEnDE,MAAM,CAACK,KAAK,CACR,qDAAqDN,gBAAgB,yCAAyCA,gBAAgB,4FAA4F,CAC7N;MACD,MAAMO,sBAAsB,CAACC,cAAoC,CAAC;IACrE,OAAM;MACHP,MAAM,CAACK,KAAK,CACR,KAAKN,gBAAgB,4FAA4FA,gBAAgB,6DAA6D,CACjM;MACDC,MAAM,CAACQ,QAAQ,CACX,OAAOT,gBAAgB,iBAAiBD,cAAc,EAAE,CAC3D;MACD,MAAMQ,sBAAsB,CACxBG,iCAAuD,CAC1D;IACJ;EACJ;EACD,OAAOR,YAAY;AACvB;AAEA;;AAEG;SACaS,uBAAuBA,CACnCC,QAA2B,EAC3BC,aAAsB,EACtBC,eAAgC;EAEhC,IAAI,CAACF,QAAQ,CAACG,KAAK,EAAE;IACjB,MAAMR,sBAAsB,CAACS,aAAmC,CAAC;EACpE;EAED,MAAMC,gBAAgB,GAAGC,0BAA0B,CAC/CL,aAAa,EACbD,QAAQ,CAACG,KAAK,CACjB;EACD,IAAI,CAACE,gBAAgB,EAAE;IACnB,MAAMV,sBAAsB,CAACY,kBAAwC,CAAC;EACzE;EAED,IAAIF,gBAAgB,CAACH,eAAe,KAAKA,eAAe,EAAE;IACtD,MAAMP,sBAAsB,CACxBa,4BAAkD,CACrD;EACJ;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}