{"ast":null,"code":"/*! @azure/msal-common v15.7.0 2025-05-30 */\n'use strict';\n\nimport { Constants } from '../utils/Constants.mjs';\nimport { unexpectedError, postRequestFailed } from './AuthErrorCodes.mjs';\nimport * as AuthErrorCodes from './AuthErrorCodes.mjs';\nexport { AuthErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nconst AuthErrorMessages = {\n  [unexpectedError]: \"Unexpected error in authentication.\",\n  [postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\"\n};\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use AuthErrorCodes instead\r\n */\nconst AuthErrorMessage = {\n  unexpectedError: {\n    code: unexpectedError,\n    desc: AuthErrorMessages[unexpectedError]\n  },\n  postRequestFailed: {\n    code: postRequestFailed,\n    desc: AuthErrorMessages[postRequestFailed]\n  }\n};\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\nclass AuthError extends Error {\n  constructor(errorCode, errorMessage, suberror) {\n    const errorString = errorMessage ? `${errorCode}: ${errorMessage}` : errorCode;\n    super(errorString);\n    Object.setPrototypeOf(this, AuthError.prototype);\n    this.errorCode = errorCode || Constants.EMPTY_STRING;\n    this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n    this.subError = suberror || Constants.EMPTY_STRING;\n    this.name = \"AuthError\";\n  }\n  setCorrelationId(correlationId) {\n    this.correlationId = correlationId;\n  }\n}\nfunction createAuthError(code, additionalMessage) {\n  return new AuthError(code, additionalMessage ? `${AuthErrorMessages[code]} ${additionalMessage}` : AuthErrorMessages[code]);\n}\nexport { AuthError, AuthErrorMessage, AuthErrorMessages, createAuthError };","map":{"version":3,"names":["AuthErrorMessages","unexpectedError","postRequestFailed","AuthErrorMessage","code","desc","AuthError","Error","constructor","errorCode","errorMessage","suberror","errorString","Object","setPrototypeOf","prototype","Constants","EMPTY_STRING","subError","name","setCorrelationId","correlationId","createAuthError","additionalMessage"],"sources":["/Users/yuri.narang/Desktop/bondly-workplace-community-hub/node_modules/@azure/msal-common/src/error/AuthError.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants.js\";\nimport * as AuthErrorCodes from \"./AuthErrorCodes.js\";\nexport { AuthErrorCodes };\n\nexport const AuthErrorMessages = {\n    [AuthErrorCodes.unexpectedError]: \"Unexpected error in authentication.\",\n    [AuthErrorCodes.postRequestFailed]:\n        \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: AuthErrorCodes.unexpectedError,\n        desc: AuthErrorMessages[AuthErrorCodes.unexpectedError],\n    },\n    postRequestFailed: {\n        code: AuthErrorCodes.postRequestFailed,\n        desc: AuthErrorMessages[AuthErrorCodes.postRequestFailed],\n    },\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n}\n\nexport function createAuthError(\n    code: string,\n    additionalMessage?: string\n): AuthError {\n    return new AuthError(\n        code,\n        additionalMessage\n            ? `${AuthErrorMessages[code]} ${additionalMessage}`\n            : AuthErrorMessages[code]\n    );\n}\n"],"mappings":";;;;;;;;AAAA;;;AAGG;AAMU,MAAAA,iBAAiB,GAAG;EAC7B,CAACC,eAA8B,GAAG,qCAAqC;EACvE,CAACC,iBAAgC,GAC7B;;AAGR;;;AAGG;AACU,MAAAC,gBAAgB,GAAG;EAC5BF,eAAe,EAAE;IACbG,IAAI,EAAEH,eAA8B;IACpCI,IAAI,EAAEL,iBAAiB,CAACC,eAA8B;EACzD;EACDC,iBAAiB,EAAE;IACfE,IAAI,EAAEF,iBAAgC;IACtCG,IAAI,EAAEL,iBAAiB,CAACE,iBAAgC;EAC3D;;AAGL;;AAEG;AACG,MAAOI,SAAU,SAAQC,KAAK;EAqBhCC,YAAYC,SAAkB,EAAEC,YAAqB,EAAEC,QAAiB;IACpE,MAAMC,WAAW,GAAGF,YAAY,GAC1B,GAAGD,SAAS,KAAKC,YAAY,EAAE,GAC/BD,SAAS;IACf,KAAK,CAACG,WAAW,CAAC;IAClBC,MAAM,CAACC,cAAc,CAAC,IAAI,EAAER,SAAS,CAACS,SAAS,CAAC;IAEhD,IAAI,CAACN,SAAS,GAAGA,SAAS,IAAIO,SAAS,CAACC,YAAY;IACpD,IAAI,CAACP,YAAY,GAAGA,YAAY,IAAIM,SAAS,CAACC,YAAY;IAC1D,IAAI,CAACC,QAAQ,GAAGP,QAAQ,IAAIK,SAAS,CAACC,YAAY;IAClD,IAAI,CAACE,IAAI,GAAG,WAAW;;EAG3BC,gBAAgBA,CAACC,aAAqB;IAClC,IAAI,CAACA,aAAa,GAAGA,aAAa;;AAEzC;AAEe,SAAAC,eAAeA,CAC3BlB,IAAY,EACZmB,iBAA0B;EAE1B,OAAO,IAAIjB,SAAS,CAChBF,IAAI,EACJmB,iBAAiB,GACX,GAAGvB,iBAAiB,CAACI,IAAI,CAAC,IAAImB,iBAAiB,EAAE,GACjDvB,iBAAiB,CAACI,IAAI,CAAC,CAChC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}